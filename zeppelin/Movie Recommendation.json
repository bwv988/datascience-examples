{"paragraphs":[{"text":"%md \n\n# Data Science Example: Building a Movie Recommender System\n\n## Introduction\n\nThe purpose of this tutorial is to show how to use **Apache Spark** and its Machine Learning library **MLlib** to analyze a data set and gain insights from the data.\n\nWe'll employ the following 6-step data science workflow that is typically encountered when trying to investigate real-world data.  \n\n1. Download and assess data in a reproducible manner. We begin with a smaller data set.\n2. Data cleaning and exploratory analysis.\n3. Look at summary statistics.\n4. Build a predictive model.\n5. Analyze prediction performance.\n6. Move code into production and run on a larger data set.","dateUpdated":"2017-01-20T13:56:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275303_-2105843331","id":"20170116-165300_588663153","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Data Science Example: Building a Movie Recommender System</h1>\n<h2>Introduction</h2>\n<p>The purpose of this tutorial is to show how to use <strong>Apache Spark</strong> and its Machine Learning library <strong>MLlib</strong> to analyze a data set and gain insights from the data.</p>\n<p>We'll employ the following 6-step data science workflow that is typically encountered when trying to investigate real-world data.</p>\n<ol>\n<li>Download and assess data in a reproducible manner. We begin with a smaller data set.</li>\n<li>Data cleaning and exploratory analysis.</li>\n<li>Look at summary statistics.</li>\n<li>Build a predictive model.</li>\n<li>Analyze prediction performance.</li>\n<li>Move code into production and run on a larger data set.</li>\n</ol>\n"},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T13:56:59+0000","dateFinished":"2017-01-20T13:56:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:179","focus":true},{"text":"%md\n\n## Step 1: The data\n\nIn this tutorial, we'll be using the **MovieLens** data set which has been collected, curated, and is maintained by the GroupLens research group at the University of Minnesota: [https://grouplens.org/](https://grouplens.org/) \n\nThis data set contains non-commercial and public movie ratings that captures user ratings for movies. This data is curated and maintained by the \n\n\n","dateUpdated":"2017-01-20T14:00:54+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484826632366_-1951353892","id":"20170119-115032_1935026800","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Step 1: The data</h2>\n<p>In this tutorial, we'll be using a publicly available data set that captures user ratings for movies. This data is curated and maintained by the GroupLens research group at the University of Minnesota: <a href=\"https://grouplens.org/\">https://grouplens.org/</a></p>\n"},"dateCreated":"2017-01-19T11:50:32+0000","dateStarted":"2017-01-20T13:58:45+0000","dateFinished":"2017-01-20T13:58:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:180","focus":true},{"text":"%sh\n\necho \"Downloading data to $(pwd)...\"\n\n# Let's set some variables.\nexport DATA_URL_PREFIX=\"http://files.grouplens.org/datasets/movielens/\"\nexport FLAVOUR=\"ml-latest-small\"\nexport DATA_URL=\"$DATA_URL_PREFIX/$FLAVOUR.zip\"\nexport HDFS_DATA_DIR=\"/user/data/$FLAVOUR\"\n\n# Download the data set from the MovieLens group site.\ncurl -sSL $DATA_URL -o $FLAVOUR.zip\nunzip -o $FLAVOUR.zip\n\n# Create a folder in HDFS and copy the data.\nhadoop fs -mkdir -p $HDFS_DATA_DIR\nhadoop fs -copyFromLocal -f $FLAVOUR/* $HDFS_DATA_DIR/\n\n\n# Clean up.\nrm -r $FLAVOUR\nrm $FLAVOUR.zip\n\necho -e \"\\n\\nDone\"","dateUpdated":"2017-01-20T10:52:45+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275304_-2107767075","id":"20160905-173301_193364218","result":{"code":"SUCCESS","type":"TEXT","msg":"Downloading data to /workdir...\nArchive:  ml-latest-small.zip\n   creating: ml-latest-small/\n  inflating: ml-latest-small/links.csv  \n  inflating: ml-latest-small/movies.csv  \n  inflating: ml-latest-small/ratings.csv  \n  inflating: ml-latest-small/README.txt  \n  inflating: ml-latest-small/tags.csv  \n\n\nDone\n"},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T10:52:45+0000","dateFinished":"2017-01-20T10:52:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:181"},{"text":"%md\n\nLet's now review the contents of what has been downloaded:","dateUpdated":"2017-01-20T10:52:45+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275304_-2107767075","id":"20170116-212738_1368280800","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Let's now review the contents of what has been downloaded:</p>\n"},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T10:52:45+0000","dateFinished":"2017-01-20T10:52:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:182"},{"text":"%sh\n\nhadoop fs -ls /user/data/ml-latest-small","dateUpdated":"2017-01-20T10:52:45+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275304_-2107767075","id":"20170116-210426_1190424134","result":{"code":"SUCCESS","type":"TEXT","msg":"Found 5 items\n-rw-r--r--   3 root supergroup       8364 2017-01-18 16:10 /user/data/ml-latest-small/README.txt\n-rw-r--r--   3 root supergroup     183372 2017-01-18 16:10 /user/data/ml-latest-small/links.csv\n-rw-r--r--   3 root supergroup     458390 2017-01-18 16:10 /user/data/ml-latest-small/movies.csv\n-rw-r--r--   3 root supergroup    2438266 2017-01-18 16:10 /user/data/ml-latest-small/ratings.csv\n-rw-r--r--   3 root supergroup      41902 2017-01-18 16:10 /user/data/ml-latest-small/tags.csv\n"},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T10:52:46+0000","dateFinished":"2017-01-20T10:52:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:183"},{"text":"%md\n\n## Step 2: Exploratory analysis\n\nBefore applying more advanced techniques, let's first take a look load the data set and do some exploration to get a better sense of what features exist.\n","dateUpdated":"2017-01-20T13:57:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275304_-2107767075","id":"20170116-215349_974644676","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Exploratory analysis</h2>\n<p>Before applying more advanced techniques, let's first take a look load the data set and do some exploration to get a better sense of what features exist.</p>\n"},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T11:01:40+0000","dateFinished":"2017-01-20T11:01:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:184","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484909741282_-2047814702","id":"20170120-105541_2008862764","dateCreated":"2017-01-20T10:55:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2497","text":"%sh\n\nhadoop fs -cat /user/data/ml-latest-small/movies.csv | head -n 5","dateUpdated":"2017-01-20T11:00:37+0000","dateFinished":"2017-01-20T11:00:40+0000","dateStarted":"2017-01-20T11:00:37+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"movieId,title,genres\r\n1,Toy Story (1995),Adventure|Animation|Children|Comedy|Fantasy\r\n2,Jumanji (1995),Adventure|Children|Fantasy\r\n3,Grumpier Old Men (1995),Comedy|Romance\r\n4,Waiting to Exhale (1995),Comedy|Drama|Romance\r\ncat: Unable to write to output stream.\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484909995120_-1015180947","id":"20170120-105955_825654939","dateCreated":"2017-01-20T10:59:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2663","text":"%sh\n\n\nhadoop fs -cat /user/data/ml-latest-small/ratings.csv | head -n 5","dateUpdated":"2017-01-20T11:00:47+0000","dateFinished":"2017-01-20T11:00:49+0000","dateStarted":"2017-01-20T11:00:47+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"userId,movieId,rating,timestamp\r\n1,31,2.5,1260759144\r\n1,1029,3.0,1260759179\r\n1,1061,3.0,1260759182\r\n1,1129,2.0,1260759185\r\ncat: Unable to write to output stream.\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484910103677_-476362276","id":"20170120-110143_1345070342","dateCreated":"2017-01-20T11:01:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2805","text":"%md\n\n### Data schema\n\nAs can be seen, we are dealing with _structured_ data, so it makes sense to define an appropriate data schema in Spark. \n\nAlternatively, we could try and let Spark auto-discover the schema -- which works quite well in most simple cases -- however it's a good opportunity to explain how schemas can be prescribed when dealing with data where auto-discovery is not sufficient.","dateUpdated":"2017-01-20T11:05:49+0000","dateFinished":"2017-01-20T11:05:49+0000","dateStarted":"2017-01-20T11:05:49+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Data schema</h3>\n<p>As can be seen, we are dealing with <em>structured</em> data, so it makes sense to define an appropriate data schema in Spark.</p>\n<p>Alternatively, we could try and let Spark auto-discover the schema &ndash; which works quite well in most simple cases &ndash; however it's a good opportunity to explain how schemas can be prescribed when dealing with data where auto-discovery is not sufficient.</p>\n"}},{"text":"%pyspark\n\nfrom pyspark.sql.types import *\n\n# Define schemas for ratings and movie data.\nratings_df_schema = StructType(\n  [StructField('userId', IntegerType()),\n   StructField('movieId', IntegerType()),\n   StructField('rating', DoubleType())]\n)\nmovies_df_schema = StructType(\n  [StructField('ID', IntegerType()),\n   StructField('title', StringType())]\n)","dateUpdated":"2017-01-20T11:04:33+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275305_-2108151824","id":"20160905-175347_976876351","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T10:52:46+0000","dateFinished":"2017-01-20T10:52:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:185"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484910357330_2023502925","id":"20170120-110557_1632882441","dateCreated":"2017-01-20T11:05:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2962","text":"%md \n\n### Spark's DataFrame API\n\nThis now puts us in a position to leverage Spark's new **DataFrame API** (https://spark.apache.org/docs/2.0.2/api/python/pyspark.sql.html#pyspark.sql.DataFrame) which provides a higher-level of data abstraction than what is offered by _RDD's_. \n\nConcretely, Spark's DataFrame API is conecptually very close to similar data types in Pandas or R.","dateUpdated":"2017-01-20T11:09:32+0000","dateFinished":"2017-01-20T11:09:32+0000","dateStarted":"2017-01-20T11:09:32+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Spark's DataFrame API</h3>\n<p>This now puts us in a position to leverage Spark's new <strong>DataFrame API</strong> (https://spark.apache.org/docs/2.0.2/api/python/pyspark.sql.html#pyspark.sql.DataFrame) which provides a higher-level of data abstraction than what is offered by <em>RDD's</em>.</p>\n<p>Concretely, Spark's DataFrame API is conecptually very close to similar data types in Pandas or R.</p>\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484910579239_1757375467","id":"20170120-110939_1367410160","dateCreated":"2017-01-20T11:09:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3040","text":"%md\n\n### Loading the data from the CSV files","dateUpdated":"2017-01-20T11:09:53+0000","dateFinished":"2017-01-20T11:09:53+0000","dateStarted":"2017-01-20T11:09:53+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Loading the data from the CSV files</h3>\n"}},{"text":"%pyspark\n\nFLAVOUR = 'ml-latest-small'\n\nhdfs_dir = '/user/data/' + FLAVOUR\nratings_filename = hdfs_dir + '/ratings.csv'\nmovies_filename = hdfs_dir + '/movies.csv'","dateUpdated":"2017-01-20T10:52:46+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275305_-2108151824","id":"20160905-180025_498313885","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T10:52:46+0000","dateFinished":"2017-01-20T10:52:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:186"},{"text":"%pyspark\n\nfrom pyspark.sql.functions import regexp_extract\nfrom pyspark.sql.types import *\n\n# Read ratings.\nraw_ratings_df = spark.read.schema(ratings_df_schema).option(\"header\", True).csv(ratings_filename)\nratings_df = raw_ratings_df.drop('Timestamp')\n\n# Read movie data.\nraw_movies_df = spark.read.schema(movies_df_schema).option(\"header\", True).csv(movies_filename)\nmovies_df = raw_movies_df.drop('Genres').withColumnRenamed('movieId', 'ID')\n\n# Cache data.\nratings_df.cache()\nmovies_df.cache()\n\nassert ratings_df.is_cached\nassert movies_df.is_cached\n\nraw_ratings_count = raw_ratings_df.count()\nratings_count = ratings_df.count()\nraw_movies_count = raw_movies_df.count()\nmovies_count = movies_df.count()\n\n# Let's print a summary.\nprint 'There are %s ratings and %s movies in the datasets' % (ratings_count, movies_count)","dateUpdated":"2017-01-20T11:11:02+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275305_-2108151824","id":"20160905-181742_1291090020","result":{"code":"SUCCESS","type":"TEXT","msg":"There are 100004 ratings and 9125 movies in the datasets\n"},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T10:52:46+0000","dateFinished":"2017-01-20T10:52:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484910636567_77839248","id":"20170120-111036_583711460","dateCreated":"2017-01-20T11:10:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3115","text":"%md\n\nNow we can take a closer look at the contents of the data frames.","dateUpdated":"2017-01-20T11:10:53+0000","dateFinished":"2017-01-20T11:10:53+0000","dateStarted":"2017-01-20T11:10:53+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Now we can take a closer look at the contents of the data frames.</p>\n"}},{"text":"%pyspark\n\nz.show(movies_df.limit(10))\n","dateUpdated":"2017-01-20T10:52:46+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"ID","index":0,"aggr":"sum"}],"values":[{"name":"title","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"ID","index":0,"aggr":"sum"},"yAxis":{"name":"title","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484756362922_-2102266220","id":"20170118-161922_153050418","result":{"code":"SUCCESS","type":"TABLE","msg":"ID\ttitle\n1\tToy Story (1995)\n2\tJumanji (1995)\n3\tGrumpier Old Men (1995)\n4\tWaiting to Exhale (1995)\n5\tFather of the Bride Part II (1995)\n6\tHeat (1995)\n7\tSabrina (1995)\n8\tTom and Huck (1995)\n9\tSudden Death (1995)\n10\tGoldenEye (1995)\n\n","comment":"","msgTable":[[{"key":"title","value":"1"},{"key":"title","value":"Toy Story (1995)"}],[{"value":"2"},{"value":"Jumanji (1995)"}],[{"value":"3"},{"value":"Grumpier Old Men (1995)"}],[{"value":"4"},{"value":"Waiting to Exhale (1995)"}],[{"value":"5"},{"value":"Father of the Bride Part II (1995)"}],[{"value":"6"},{"value":"Heat (1995)"}],[{"value":"7"},{"value":"Sabrina (1995)"}],[{"value":"8"},{"value":"Tom and Huck (1995)"}],[{"value":"9"},{"value":"Sudden Death (1995)"}],[{"value":"10"},{"value":"GoldenEye (1995)"}]],"columnNames":[{"name":"ID","index":0,"aggr":"sum"},{"name":"title","index":1,"aggr":"sum"}],"rows":[["1","Toy Story (1995)"],["2","Jumanji (1995)"],["3","Grumpier Old Men (1995)"],["4","Waiting to Exhale (1995)"],["5","Father of the Bride Part II (1995)"],["6","Heat (1995)"],["7","Sabrina (1995)"],["8","Tom and Huck (1995)"],["9","Sudden Death (1995)"],["10","GoldenEye (1995)"]]},"dateCreated":"2017-01-18T16:19:22+0000","dateStarted":"2017-01-20T10:52:46+0000","dateFinished":"2017-01-20T10:52:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:188"},{"text":"%pyspark\n\nz.show(ratings_df.limit(10))","dateUpdated":"2017-01-20T10:52:46+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275305_-2108151824","id":"20160905-181811_1866959174","result":{"code":"SUCCESS","type":"TABLE","msg":"userId\tmovieId\trating\n1\t31\t2.5\n1\t1029\t3.0\n1\t1061\t3.0\n1\t1129\t2.0\n1\t1172\t4.0\n1\t1263\t2.0\n1\t1287\t2.0\n1\t1293\t2.0\n1\t1339\t3.5\n1\t1343\t2.0\n\n","comment":"","msgTable":[[{"key":"movieId","value":"1"},{"key":"movieId","value":"31"},{"key":"movieId","value":"2.5"}],[{"key":"rating","value":"1"},{"key":"rating","value":"1029"},{"key":"rating","value":"3.0"}],[{"value":"1"},{"value":"1061"},{"value":"3.0"}],[{"value":"1"},{"value":"1129"},{"value":"2.0"}],[{"value":"1"},{"value":"1172"},{"value":"4.0"}],[{"value":"1"},{"value":"1263"},{"value":"2.0"}],[{"value":"1"},{"value":"1287"},{"value":"2.0"}],[{"value":"1"},{"value":"1293"},{"value":"2.0"}],[{"value":"1"},{"value":"1339"},{"value":"3.5"}],[{"value":"1"},{"value":"1343"},{"value":"2.0"}]],"columnNames":[{"name":"userId","index":0,"aggr":"sum"},{"name":"movieId","index":1,"aggr":"sum"},{"name":"rating","index":2,"aggr":"sum"}],"rows":[["1","31","2.5"],["1","1029","3.0"],["1","1061","3.0"],["1","1129","2.0"],["1","1172","4.0"],["1","1263","2.0"],["1","1287","2.0"],["1","1293","2.0"],["1","1339","3.5"],["1","1343","2.0"]]},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T10:52:46+0000","dateFinished":"2017-01-20T10:52:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189"},{"text":"%md\n\n### Summary statistics: Using averages","dateUpdated":"2017-01-20T10:53:57+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484826697879_1809874735","id":"20170119-115137_552973414","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Summary statistics: Using averages</h3>\n"},"dateCreated":"2017-01-19T11:51:37+0000","dateStarted":"2017-01-20T10:53:57+0000","dateFinished":"2017-01-20T10:53:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:190","focus":true},{"text":"%pyspark\n\nfrom pyspark.sql import functions as F\n\n# From ratingsDF, create a movie_ids_with_avg_ratings_df that combines the two DataFrames\nmovie_ids_with_avg_ratings_df = ratings_df.groupBy('movieId').agg(F.count(ratings_df.rating).alias(\"count\"), F.avg(ratings_df.rating).alias(\"average\"))\n\n# Note: movie_names_df is a temporary variable, used only to separate the steps necessary\n# to create the movie_names_with_avg_ratings_df DataFrame.\n\nmovie_names_df = movie_ids_with_avg_ratings_df.join(movies_df,  movie_ids_with_avg_ratings_df.movieId==movies_df.ID, 'inner').drop(movies_df.ID)\nmovie_names_with_avg_ratings_df = movie_names_df","dateUpdated":"2017-01-20T10:52:46+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275314_-2097763604","id":"20170117-195901_1783491843","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T10:52:47+0000","dateFinished":"2017-01-20T10:52:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:191"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484910666279_-57161643","id":"20170120-111106_194865753","dateCreated":"2017-01-20T11:11:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3197","text":"%md\n\n### Movies with most votes","dateUpdated":"2017-01-20T11:53:19+0000","dateFinished":"2017-01-20T11:53:19+0000","dateStarted":"2017-01-20T11:53:19+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Movies with most votes</h3>\n"}},{"text":"%pyspark\n\nm_ordered = movie_names_with_avg_ratings_df.orderBy(\"count\", ascending = 0)\nz.show(m_ordered.limit(10))\n","dateUpdated":"2017-01-20T10:52:46+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275314_-2097763604","id":"20170117-201122_730391197","result":{"code":"SUCCESS","type":"TABLE","msg":"movieId\tcount\taverage\ttitle\n356\t341\t4.05425219941349\tForrest Gump (1994)\n296\t324\t4.256172839506172\tPulp Fiction (1994)\n318\t311\t4.487138263665595\tShawshank Redemption, The (1994)\n593\t304\t4.1381578947368425\tSilence of the Lambs, The (1991)\n260\t291\t4.221649484536083\tStar Wars: Episode IV - A New Hope (1977)\n480\t274\t3.7062043795620436\tJurassic Park (1993)\n2571\t259\t4.183397683397684\tMatrix, The (1999)\n1\t247\t3.8724696356275303\tToy Story (1995)\n527\t244\t4.30327868852459\tSchindler's List (1993)\n589\t237\t4.006329113924051\tTerminator 2: Judgment Day (1991)\n\n","comment":"","msgTable":[[{"key":"count","value":"356"},{"key":"count","value":"341"},{"key":"count","value":"4.05425219941349"},{"key":"count","value":"Forrest Gump (1994)"}],[{"key":"average","value":"296"},{"key":"average","value":"324"},{"key":"average","value":"4.256172839506172"},{"key":"average","value":"Pulp Fiction (1994)"}],[{"key":"title","value":"318"},{"key":"title","value":"311"},{"key":"title","value":"4.487138263665595"},{"key":"title","value":"Shawshank Redemption, The (1994)"}],[{"value":"593"},{"value":"304"},{"value":"4.1381578947368425"},{"value":"Silence of the Lambs, The (1991)"}],[{"value":"260"},{"value":"291"},{"value":"4.221649484536083"},{"value":"Star Wars: Episode IV - A New Hope (1977)"}],[{"value":"480"},{"value":"274"},{"value":"3.7062043795620436"},{"value":"Jurassic Park (1993)"}],[{"value":"2571"},{"value":"259"},{"value":"4.183397683397684"},{"value":"Matrix, The (1999)"}],[{"value":"1"},{"value":"247"},{"value":"3.8724696356275303"},{"value":"Toy Story (1995)"}],[{"value":"527"},{"value":"244"},{"value":"4.30327868852459"},{"value":"Schindler's List (1993)"}],[{"value":"589"},{"value":"237"},{"value":"4.006329113924051"},{"value":"Terminator 2: Judgment Day (1991)"}]],"columnNames":[{"name":"movieId","index":0,"aggr":"sum"},{"name":"count","index":1,"aggr":"sum"},{"name":"average","index":2,"aggr":"sum"},{"name":"title","index":3,"aggr":"sum"}],"rows":[["356","341","4.05425219941349","Forrest Gump (1994)"],["296","324","4.256172839506172","Pulp Fiction (1994)"],["318","311","4.487138263665595","Shawshank Redemption, The (1994)"],["593","304","4.1381578947368425","Silence of the Lambs, The (1991)"],["260","291","4.221649484536083","Star Wars: Episode IV - A New Hope (1977)"],["480","274","3.7062043795620436","Jurassic Park (1993)"],["2571","259","4.183397683397684","Matrix, The (1999)"],["1","247","3.8724696356275303","Toy Story (1995)"],["527","244","4.30327868852459","Schindler's List (1993)"],["589","237","4.006329113924051","Terminator 2: Judgment Day (1991)"]]},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T10:52:47+0000","dateFinished":"2017-01-20T10:52:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:192"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484913203697_480516984","id":"20170120-115323_1772369193","dateCreated":"2017-01-20T11:53:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3424","text":"%md\n\n### Filter movies with at least 200 votes","dateUpdated":"2017-01-20T11:53:38+0000","dateFinished":"2017-01-20T11:53:38+0000","dateStarted":"2017-01-20T11:53:38+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Filter movies with at least 200 votes</h3>\n"}},{"text":"%pyspark\n\n# Now get movies with more than 200 ratings.\nmovies_with_200_ratings_or_more = movie_names_with_avg_ratings_df.orderBy('average', ascending=False).filter('count >= 200')\nprint 'Movies with highest ratings:'\n\nz.show(movies_with_200_ratings_or_more.limit(10))","dateUpdated":"2017-01-20T10:52:46+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484825937085_-1252826678","id":"20170119-113857_1545682050","result":{"code":"SUCCESS","type":"TABLE","msg":"movieId\tcount\taverage\ttitle\n858\t200\t4.4875\tGodfather, The (1972)\n318\t311\t4.487138263665595\tShawshank Redemption, The (1994)\n50\t201\t4.370646766169155\tUsual Suspects, The (1995)\n527\t244\t4.30327868852459\tSchindler's List (1993)\n608\t224\t4.256696428571429\tFargo (1996)\n296\t324\t4.256172839506172\tPulp Fiction (1994)\n2858\t220\t4.236363636363636\tAmerican Beauty (1999)\n1196\t234\t4.232905982905983\tStar Wars: Episode V - The Empire Strikes Back (1980)\n260\t291\t4.221649484536083\tStar Wars: Episode IV - A New Hope (1977)\n1198\t220\t4.193181818181818\tRaiders of the Lost Ark (Indiana Jones and the Raiders of the Lost Ark) (1981)\n\n","comment":"","msgTable":[[{"key":"count","value":"858"},{"key":"count","value":"200"},{"key":"count","value":"4.4875"},{"key":"count","value":"Godfather, The (1972)"}],[{"key":"average","value":"318"},{"key":"average","value":"311"},{"key":"average","value":"4.487138263665595"},{"key":"average","value":"Shawshank Redemption, The (1994)"}],[{"key":"title","value":"50"},{"key":"title","value":"201"},{"key":"title","value":"4.370646766169155"},{"key":"title","value":"Usual Suspects, The (1995)"}],[{"value":"527"},{"value":"244"},{"value":"4.30327868852459"},{"value":"Schindler's List (1993)"}],[{"value":"608"},{"value":"224"},{"value":"4.256696428571429"},{"value":"Fargo (1996)"}],[{"value":"296"},{"value":"324"},{"value":"4.256172839506172"},{"value":"Pulp Fiction (1994)"}],[{"value":"2858"},{"value":"220"},{"value":"4.236363636363636"},{"value":"American Beauty (1999)"}],[{"value":"1196"},{"value":"234"},{"value":"4.232905982905983"},{"value":"Star Wars: Episode V - The Empire Strikes Back (1980)"}],[{"value":"260"},{"value":"291"},{"value":"4.221649484536083"},{"value":"Star Wars: Episode IV - A New Hope (1977)"}],[{"value":"1198"},{"value":"220"},{"value":"4.193181818181818"},{"value":"Raiders of the Lost Ark (Indiana Jones and the Raiders of the Lost Ark) (1981)"}]],"columnNames":[{"name":"movieId","index":0,"aggr":"sum"},{"name":"count","index":1,"aggr":"sum"},{"name":"average","index":2,"aggr":"sum"},{"name":"title","index":3,"aggr":"sum"}],"rows":[["858","200","4.4875","Godfather, The (1972)"],["318","311","4.487138263665595","Shawshank Redemption, The (1994)"],["50","201","4.370646766169155","Usual Suspects, The (1995)"],["527","244","4.30327868852459","Schindler's List (1993)"],["608","224","4.256696428571429","Fargo (1996)"],["296","324","4.256172839506172","Pulp Fiction (1994)"],["2858","220","4.236363636363636","American Beauty (1999)"],["1196","234","4.232905982905983","Star Wars: Episode V - The Empire Strikes Back (1980)"],["260","291","4.221649484536083","Star Wars: Episode IV - A New Hope (1977)"],["1198","220","4.193181818181818","Raiders of the Lost Ark (Indiana Jones and the Raiders of the Lost Ark) (1981)"]]},"dateCreated":"2017-01-19T11:38:57+0000","dateStarted":"2017-01-20T10:52:47+0000","dateFinished":"2017-01-20T10:52:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:193"},{"text":"%md\n\n##  Collaborative Filtering and Alternating Least Squares\n\n### Step 1: Splitting data into training, test and validation sets","dateUpdated":"2017-01-20T10:52:46+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484755275314_-2097763604","id":"20170117-205707_1066614680","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Collaborative Filtering and Alternating Least Squares</h2>\n<h3>Step 1: Splitting data into training, test and validation sets</h3>\n"},"dateCreated":"2017-01-18T16:01:15+0000","dateStarted":"2017-01-20T10:52:46+0000","dateFinished":"2017-01-20T10:52:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:194"},{"text":"%pyspark\n\n# For reasons of reproducibility, set a seed.\nseed = 1222121193L\n\n\n(split_60_df, split_a_20_df, split_b_20_df) = ratings_df.randomSplit([0.6, 0.2, 0.2], seed)\n\ntraining_df = split_60_df.cache()\nvalidation_df = split_a_20_df.cache()\ntest_df = split_b_20_df.cache()\n\nprint('Size of split sets: Training set: {0}, validation set: {1}, test set: {2}\\n'.format(\n  training_df.count(), validation_df.count(), test_df.count())\n)\n\n\nz.show(training_df.limit(3))\n","dateUpdated":"2017-01-20T11:12:15+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484826142226_-1858346470","id":"20170119-114222_41843633","result":{"code":"SUCCESS","type":"TABLE","msg":"userId\tmovieId\trating\n1\t31\t2.5\n1\t1061\t3.0\n1\t1129\t2.0\n\n","comment":"","msgTable":[[{"key":"movieId","value":"1"},{"key":"movieId","value":"31"},{"key":"movieId","value":"2.5"}],[{"key":"rating","value":"1"},{"key":"rating","value":"1061"},{"key":"rating","value":"3.0"}],[{"value":"1"},{"value":"1129"},{"value":"2.0"}]],"columnNames":[{"name":"userId","index":0,"aggr":"sum"},{"name":"movieId","index":1,"aggr":"sum"},{"name":"rating","index":2,"aggr":"sum"}],"rows":[["1","31","2.5"],["1","1061","3.0"],["1","1129","2.0"]]},"dateCreated":"2017-01-19T11:42:22+0000","dateStarted":"2017-01-20T11:12:15+0000","dateFinished":"2017-01-20T11:12:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:195","focus":true},{"text":"%pyspark\n\nz.show(validation_df.limit(3))\n","dateUpdated":"2017-01-20T10:52:46+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484835503986_69926058","id":"20170119-141823_704345449","result":{"code":"SUCCESS","type":"TABLE","msg":"userId\tmovieId\trating\n1\t1061\t3.0\n1\t1339\t3.5\n1\t1371\t2.5\n\n","comment":"","msgTable":[[{"key":"movieId","value":"1"},{"key":"movieId","value":"1061"},{"key":"movieId","value":"3.0"}],[{"key":"rating","value":"1"},{"key":"rating","value":"1339"},{"key":"rating","value":"3.5"}],[{"value":"1"},{"value":"1371"},{"value":"2.5"}]],"columnNames":[{"name":"userId","index":0,"aggr":"sum"},{"name":"movieId","index":1,"aggr":"sum"},{"name":"rating","index":2,"aggr":"sum"}],"rows":[["1","1061","3.0"],["1","1339","3.5"],["1","1371","2.5"]]},"dateCreated":"2017-01-19T14:18:23+0000","dateStarted":"2017-01-20T10:52:48+0000","dateFinished":"2017-01-20T10:52:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:196"},{"text":"%pyspark\n\nz.show(test_df.limit(3))","dateUpdated":"2017-01-20T10:52:46+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484835514497_1351555293","id":"20170119-141834_2024487736","result":{"code":"SUCCESS","type":"TABLE","msg":"userId\tmovieId\trating\n1\t1263\t2.0\n1\t1287\t2.0\n1\t1953\t4.0\n\n","comment":"","msgTable":[[{"key":"movieId","value":"1"},{"key":"movieId","value":"1263"},{"key":"movieId","value":"2.0"}],[{"key":"rating","value":"1"},{"key":"rating","value":"1287"},{"key":"rating","value":"2.0"}],[{"value":"1"},{"value":"1953"},{"value":"4.0"}]],"columnNames":[{"name":"userId","index":0,"aggr":"sum"},{"name":"movieId","index":1,"aggr":"sum"},{"name":"rating","index":2,"aggr":"sum"}],"rows":[["1","1263","2.0"],["1","1287","2.0"],["1","1953","4.0"]]},"dateCreated":"2017-01-19T14:18:34+0000","dateStarted":"2017-01-20T10:52:48+0000","dateFinished":"2017-01-20T10:52:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:197"},{"text":"%md\n\n### Step 2: Building prediction models using Alternating Least Squares","dateUpdated":"2017-01-20T10:52:46+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484826180530_202615470","id":"20170119-114300_1737921264","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Step 2: Building prediction models using Alternating Least Squares</h3>\n"},"dateCreated":"2017-01-19T11:43:00+0000","dateStarted":"2017-01-20T10:52:46+0000","dateFinished":"2017-01-20T10:52:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:198"},{"text":"%pyspark\n\nfrom pyspark.ml.recommendation import ALS\n\n# Let's initialize our ALS learner\nals = ALS()\n\n# Now we set the parameters for the method\nals.setMaxIter(5)\\\n   .setSeed(seed)\\\n   .setRegParam(0.1)\\\n   .setUserCol('userId')\\\n   .setItemCol('movieId')\\\n   .setRatingCol('rating')\n\n# Now let's compute an evaluation metric for our test dataset\nfrom pyspark.ml.evaluation import RegressionEvaluator\n\n# Create an RMSE evaluator using the label and predicted columns\nreg_eval = RegressionEvaluator(predictionCol=\"prediction\", labelCol=\"rating\", metricName=\"rmse\")\n\ntolerance = 0.03\nranks = [4, 8, 12]\nerrors = [0, 0, 0]\nmodels = [0, 0, 0]\nerr = 0\nmin_error = float('inf')\nbest_rank = -1\nfor rank in ranks:\n  # Set the rank here:\n  als.setRank(rank)\n  # Create the model with these parameters.\n  model = als.fit(training_df)\n  # Run the model to create a prediction. Predict against the validation_df.\n  predict_df = model.transform(validation_df)\n\n  # Remove NaN values from prediction (due to SPARK-14489)\n  predicted_ratings_df = predict_df.filter(predict_df.prediction != float('nan'))\n  # Run the previously created RMSE evaluator, reg_eval, on the predicted_ratings_df DataFrame\n  error = reg_eval.evaluate(predicted_ratings_df)\n  errors[err] = error\n  models[err] = model\n  print 'For rank %s the RMSE is %s' % (rank, error)\n  if error < min_error:\n    min_error = error\n    best_rank = err\n  err += 1\n\nals.setRank(ranks[best_rank])\nprint 'The best model was trained with rank %s' % ranks[best_rank]\nmy_model = models[best_rank]","dateUpdated":"2017-01-20T10:52:46+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484826237091_-1403433708","id":"20170119-114357_239745215","result":{"code":"SUCCESS","type":"TEXT","msg":"For rank 4 the RMSE is 0.931432098515\nFor rank 8 the RMSE is 0.950599173494\nFor rank 12 the RMSE is 0.953625863723\nThe best model was trained with rank 4\n"},"dateCreated":"2017-01-19T11:43:57+0000","dateStarted":"2017-01-20T10:52:48+0000","dateFinished":"2017-01-20T10:53:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:199"},{"text":"%md\n\n### Step 3: Prediction on the test data","dateUpdated":"2017-01-20T10:52:47+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484826796514_1589752391","id":"20170119-115316_1033013081","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Step 3: Prediction on the test data</h3>\n"},"dateCreated":"2017-01-19T11:53:16+0000","dateStarted":"2017-01-20T10:52:47+0000","dateFinished":"2017-01-20T10:52:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:200"},{"text":"%pyspark\n\n# In ML Pipelines, this next step has a bug that produces unwanted NaN values. We\n# have to filter them out. See https://issues.apache.org/jira/browse/SPARK-14489\npredict_df = my_model.transform(test_df)\n\n# Remove NaN values from prediction (due to SPARK-14489)\npredicted_test_df = predict_df.filter(predict_df.prediction != float('nan'))\n\n# Run the previously created RMSE evaluator, reg_eval, on the predicted_test_df DataFrame\ntest_RMSE = reg_eval.evaluate(predicted_test_df)\n\nprint('The model had a RMSE on the test set of {0}'.format(test_RMSE))\n\npredicted_test_df.show(10)","dateUpdated":"2017-01-20T10:52:47+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484826248337_-1857406762","id":"20170119-114408_1212275616","result":{"code":"SUCCESS","type":"TEXT","msg":"The model had a RMSE on the test set of 0.943463850634\n+------+-------+------+----------+\n|userId|movieId|rating|prediction|\n+------+-------+------+----------+\n|   350|    471|   3.0|  3.615068|\n|   659|    471|   4.0| 3.9911845|\n|   502|    471|   4.0|  4.340719|\n|   380|    471|   4.0| 3.8144865|\n|   649|    471|   3.0|  3.913679|\n|   105|    471|   4.0| 3.7922108|\n|   311|    471|   0.5|  3.057103|\n|   547|    496|   3.0| 1.3525481|\n|   580|   1088|   3.0| 3.2374167|\n|   133|   1088|   1.5| 1.9521224|\n+------+-------+------+----------+\nonly showing top 10 rows\n\n"},"dateCreated":"2017-01-19T11:44:08+0000","dateStarted":"2017-01-20T10:52:49+0000","dateFinished":"2017-01-20T10:53:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:201"},{"text":"%md\n\n### Comparing models","dateUpdated":"2017-01-20T10:52:47+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484826367138_744401574","id":"20170119-114607_2044766350","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Comparing models</h3>\n"},"dateCreated":"2017-01-19T11:46:07+0000","dateStarted":"2017-01-20T10:52:47+0000","dateFinished":"2017-01-20T10:52:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:202"},{"text":"%pyspark\n\navg_rating_df = training_df.groupBy().mean('rating')\nprint 'Average training set movie ratings:'\navg_rating_df.show(3, truncate=False)\n\n# Extract the average rating value. (This is row 0, column 0.)\ntraining_avg_rating = avg_rating_df.collect()[0][0]\n\nprint('The average rating for movies in the training set is {0}'.format(training_avg_rating))\n\n# Add a column with the average rating\ntest_for_avg_df = test_df.withColumn('prediction', F.lit(training_avg_rating))\ntest_for_avg_df.show(3, truncate=False)\n\n# Run the previously created RMSE evaluator, reg_eval, on the test_for_avg_df DataFrame\ntest_avg_RMSE = reg_eval.evaluate(test_for_avg_df)\n\nprint(\"The RMSE on the average set is {0}\".format(test_avg_RMSE))","dateUpdated":"2017-01-20T10:52:47+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484827104612_955531318","id":"20170119-115824_404059800","result":{"code":"SUCCESS","type":"TEXT","msg":"Average training set movie ratings:\n+------------------+\n|avg(rating)       |\n+------------------+\n|3.5414405114714795|\n+------------------+\n\nThe average rating for movies in the training set is 3.54144051147\n+------+-------+------+-------------+\n|userId|movieId|rating|prediction   |\n+------+-------+------+-------------+\n|1     |1263   |2.0   |3.54144051147|\n|1     |1287   |2.0   |3.54144051147|\n|1     |1953   |4.0   |3.54144051147|\n+------+-------+------+-------------+\nonly showing top 3 rows\n\nThe RMSE on the average set is 1.06436711455\n"},"dateCreated":"2017-01-19T11:58:24+0000","dateStarted":"2017-01-20T10:53:22+0000","dateFinished":"2017-01-20T10:53:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:203"},{"text":"%md\n\n### Predicting yourself","dateUpdated":"2017-01-20T10:52:47+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484827125234_-1428342219","id":"20170119-115845_895248477","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Predicting yourself</h3>\n"},"dateCreated":"2017-01-19T11:58:45+0000","dateStarted":"2017-01-20T10:52:47+0000","dateFinished":"2017-01-20T10:52:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:204"},{"text":"%pyspark\n\nprint 'Most rated movies:'\nprint '(average rating, movie name, number of reviews, movie ID)'\n\nz.show(movies_with_200_ratings_or_more.orderBy(movies_with_200_ratings_or_more['average'].desc()))\n","dateUpdated":"2017-01-20T10:52:47+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484827174604_-124969476","id":"20170119-115934_2039562721","result":{"code":"SUCCESS","type":"TABLE","msg":"movieId\tcount\taverage\ttitle\n858\t200\t4.4875\tGodfather, The (1972)\n318\t311\t4.487138263665595\tShawshank Redemption, The (1994)\n50\t201\t4.370646766169155\tUsual Suspects, The (1995)\n527\t244\t4.30327868852459\tSchindler's List (1993)\n608\t224\t4.256696428571429\tFargo (1996)\n296\t324\t4.256172839506172\tPulp Fiction (1994)\n2858\t220\t4.236363636363636\tAmerican Beauty (1999)\n1196\t234\t4.232905982905983\tStar Wars: Episode V - The Empire Strikes Back (1980)\n260\t291\t4.221649484536083\tStar Wars: Episode IV - A New Hope (1977)\n1198\t220\t4.193181818181818\tRaiders of the Lost Ark (Indiana Jones and the Raiders of the Lost Ark) (1981)\n2571\t259\t4.183397683397684\tMatrix, The (1999)\n4993\t200\t4.1825\tLord of the Rings: The Fellowship of the Ring, The (2001)\n2959\t202\t4.178217821782178\tFight Club (1999)\n593\t304\t4.1381578947368425\tSilence of the Lambs, The (1991)\n1210\t217\t4.059907834101383\tStar Wars: Episode VI - Return of the Jedi (1983)\n356\t341\t4.05425219941349\tForrest Gump (1994)\n47\t201\t4.034825870646766\tSeven (a.k.a. Se7en) (1995)\n1270\t226\t4.015486725663717\tBack to the Future (1985)\n589\t237\t4.006329113924051\tTerminator 2: Judgment Day (1991)\n457\t213\t3.9530516431924885\tFugitive, The (1993)\n110\t228\t3.9451754385964914\tBraveheart (1995)\n150\t200\t3.9025\tApollo 13 (1995)\n1\t247\t3.8724696356275303\tToy Story (1995)\n364\t200\t3.7775\tLion King, The (1994)\n590\t202\t3.717821782178218\tDances with Wolves (1990)\n480\t274\t3.7062043795620436\tJurassic Park (1993)\n588\t215\t3.6744186046511627\tAladdin (1992)\n780\t218\t3.4839449541284404\tIndependence Day (a.k.a. ID4) (1996)\n\n","comment":"","msgTable":[[{"key":"count","value":"858"},{"key":"count","value":"200"},{"key":"count","value":"4.4875"},{"key":"count","value":"Godfather, The (1972)"}],[{"key":"average","value":"318"},{"key":"average","value":"311"},{"key":"average","value":"4.487138263665595"},{"key":"average","value":"Shawshank Redemption, The (1994)"}],[{"key":"title","value":"50"},{"key":"title","value":"201"},{"key":"title","value":"4.370646766169155"},{"key":"title","value":"Usual Suspects, The (1995)"}],[{"value":"527"},{"value":"244"},{"value":"4.30327868852459"},{"value":"Schindler's List (1993)"}],[{"value":"608"},{"value":"224"},{"value":"4.256696428571429"},{"value":"Fargo (1996)"}],[{"value":"296"},{"value":"324"},{"value":"4.256172839506172"},{"value":"Pulp Fiction (1994)"}],[{"value":"2858"},{"value":"220"},{"value":"4.236363636363636"},{"value":"American Beauty (1999)"}],[{"value":"1196"},{"value":"234"},{"value":"4.232905982905983"},{"value":"Star Wars: Episode V - The Empire Strikes Back (1980)"}],[{"value":"260"},{"value":"291"},{"value":"4.221649484536083"},{"value":"Star Wars: Episode IV - A New Hope (1977)"}],[{"value":"1198"},{"value":"220"},{"value":"4.193181818181818"},{"value":"Raiders of the Lost Ark (Indiana Jones and the Raiders of the Lost Ark) (1981)"}],[{"value":"2571"},{"value":"259"},{"value":"4.183397683397684"},{"value":"Matrix, The (1999)"}],[{"value":"4993"},{"value":"200"},{"value":"4.1825"},{"value":"Lord of the Rings: The Fellowship of the Ring, The (2001)"}],[{"value":"2959"},{"value":"202"},{"value":"4.178217821782178"},{"value":"Fight Club (1999)"}],[{"value":"593"},{"value":"304"},{"value":"4.1381578947368425"},{"value":"Silence of the Lambs, The (1991)"}],[{"value":"1210"},{"value":"217"},{"value":"4.059907834101383"},{"value":"Star Wars: Episode VI - Return of the Jedi (1983)"}],[{"value":"356"},{"value":"341"},{"value":"4.05425219941349"},{"value":"Forrest Gump (1994)"}],[{"value":"47"},{"value":"201"},{"value":"4.034825870646766"},{"value":"Seven (a.k.a. Se7en) (1995)"}],[{"value":"1270"},{"value":"226"},{"value":"4.015486725663717"},{"value":"Back to the Future (1985)"}],[{"value":"589"},{"value":"237"},{"value":"4.006329113924051"},{"value":"Terminator 2: Judgment Day (1991)"}],[{"value":"457"},{"value":"213"},{"value":"3.9530516431924885"},{"value":"Fugitive, The (1993)"}],[{"value":"110"},{"value":"228"},{"value":"3.9451754385964914"},{"value":"Braveheart (1995)"}],[{"value":"150"},{"value":"200"},{"value":"3.9025"},{"value":"Apollo 13 (1995)"}],[{"value":"1"},{"value":"247"},{"value":"3.8724696356275303"},{"value":"Toy Story (1995)"}],[{"value":"364"},{"value":"200"},{"value":"3.7775"},{"value":"Lion King, The (1994)"}],[{"value":"590"},{"value":"202"},{"value":"3.717821782178218"},{"value":"Dances with Wolves (1990)"}],[{"value":"480"},{"value":"274"},{"value":"3.7062043795620436"},{"value":"Jurassic Park (1993)"}],[{"value":"588"},{"value":"215"},{"value":"3.6744186046511627"},{"value":"Aladdin (1992)"}],[{"value":"780"},{"value":"218"},{"value":"3.4839449541284404"},{"value":"Independence Day (a.k.a. ID4) (1996)"}]],"columnNames":[{"name":"movieId","index":0,"aggr":"sum"},{"name":"count","index":1,"aggr":"sum"},{"name":"average","index":2,"aggr":"sum"},{"name":"title","index":3,"aggr":"sum"}],"rows":[["858","200","4.4875","Godfather, The (1972)"],["318","311","4.487138263665595","Shawshank Redemption, The (1994)"],["50","201","4.370646766169155","Usual Suspects, The (1995)"],["527","244","4.30327868852459","Schindler's List (1993)"],["608","224","4.256696428571429","Fargo (1996)"],["296","324","4.256172839506172","Pulp Fiction (1994)"],["2858","220","4.236363636363636","American Beauty (1999)"],["1196","234","4.232905982905983","Star Wars: Episode V - The Empire Strikes Back (1980)"],["260","291","4.221649484536083","Star Wars: Episode IV - A New Hope (1977)"],["1198","220","4.193181818181818","Raiders of the Lost Ark (Indiana Jones and the Raiders of the Lost Ark) (1981)"],["2571","259","4.183397683397684","Matrix, The (1999)"],["4993","200","4.1825","Lord of the Rings: The Fellowship of the Ring, The (2001)"],["2959","202","4.178217821782178","Fight Club (1999)"],["593","304","4.1381578947368425","Silence of the Lambs, The (1991)"],["1210","217","4.059907834101383","Star Wars: Episode VI - Return of the Jedi (1983)"],["356","341","4.05425219941349","Forrest Gump (1994)"],["47","201","4.034825870646766","Seven (a.k.a. Se7en) (1995)"],["1270","226","4.015486725663717","Back to the Future (1985)"],["589","237","4.006329113924051","Terminator 2: Judgment Day (1991)"],["457","213","3.9530516431924885","Fugitive, The (1993)"],["110","228","3.9451754385964914","Braveheart (1995)"],["150","200","3.9025","Apollo 13 (1995)"],["1","247","3.8724696356275303","Toy Story (1995)"],["364","200","3.7775","Lion King, The (1994)"],["590","202","3.717821782178218","Dances with Wolves (1990)"],["480","274","3.7062043795620436","Jurassic Park (1993)"],["588","215","3.6744186046511627","Aladdin (1992)"],["780","218","3.4839449541284404","Independence Day (a.k.a. ID4) (1996)"]]},"dateCreated":"2017-01-19T11:59:34+0000","dateStarted":"2017-01-20T10:53:39+0000","dateFinished":"2017-01-20T10:53:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:205"},{"text":"%pyspark\n\nfrom pyspark.sql import Row\n\n# My user ID will be 0.\nmy_user_id = 0\n\n# Note that the movie IDs are the *last* number on each line. A common error was to use the number of ratings as the movie ID.\nmy_rated_movies = [(0, 260, 4.4), (0, 904, 5.0), (0, 7502, 4.9), (0, 527, 4.8), (0, 77658, 4.4), \\\n                   (0, 4426, 3.9), (0, 2571, 5.0), (0, 593, 4.9), (0, 1136, 4.5), (0, 912, 4.0)]\n   \n# The format of each line is (my_user_id, movie ID, your rating)\n# For example, to give the movie \"Star Wars: Episode IV - A New Hope (1977)\" a five rating, you would add the following line:\n# (my_user_id, 260, 5)\n\nmy_ratings_df = spark.createDataFrame(data = my_ratings_rdd, schema = ratings_df_schema)\n\nz.show(my_ratings_df.limit(10))\n","dateUpdated":"2017-01-20T10:52:47+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484827185200_-1136089586","id":"20170119-115945_347312139","result":{"code":"SUCCESS","type":"TABLE","msg":"userId\tmovieId\trating\n0\t260\t4.4\n0\t904\t5.0\n0\t7502\t4.9\n0\t527\t4.8\n0\t77658\t4.4\n0\t4426\t3.9\n0\t2571\t5.0\n0\t593\t4.9\n0\t1136\t4.5\n0\t912\t4.0\n\n","comment":"","msgTable":[[{"key":"movieId","value":"0"},{"key":"movieId","value":"260"},{"key":"movieId","value":"4.4"}],[{"key":"rating","value":"0"},{"key":"rating","value":"904"},{"key":"rating","value":"5.0"}],[{"value":"0"},{"value":"7502"},{"value":"4.9"}],[{"value":"0"},{"value":"527"},{"value":"4.8"}],[{"value":"0"},{"value":"77658"},{"value":"4.4"}],[{"value":"0"},{"value":"4426"},{"value":"3.9"}],[{"value":"0"},{"value":"2571"},{"value":"5.0"}],[{"value":"0"},{"value":"593"},{"value":"4.9"}],[{"value":"0"},{"value":"1136"},{"value":"4.5"}],[{"value":"0"},{"value":"912"},{"value":"4.0"}]],"columnNames":[{"name":"userId","index":0,"aggr":"sum"},{"name":"movieId","index":1,"aggr":"sum"},{"name":"rating","index":2,"aggr":"sum"}],"rows":[["0","260","4.4"],["0","904","5.0"],["0","7502","4.9"],["0","527","4.8"],["0","77658","4.4"],["0","4426","3.9"],["0","2571","5.0"],["0","593","4.9"],["0","1136","4.5"],["0","912","4.0"]]},"dateCreated":"2017-01-19T11:59:45+0000","dateStarted":"2017-01-20T10:53:40+0000","dateFinished":"2017-01-20T10:53:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:206"},{"text":"","dateUpdated":"2017-01-20T10:52:47+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484828387808_268011272","id":"20170119-121947_1929464342","dateCreated":"2017-01-19T12:19:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:209","dateFinished":"2017-01-20T10:53:41+0000","dateStarted":"2017-01-20T10:53:41+0000","errorMessage":"","focus":true}],"name":"Movie Recommendation","id":"2C9EAYN2M","angularObjects":{"2C7ZEW1B9:shared_process":[],"2C7GAM3TX:shared_process":[],"2C8XRXT3D:shared_process":[],"2C8B3QE11:shared_process":[],"2C841HNHN:shared_process":[],"2C637W9SU:shared_process":[],"2C6QP6K5P:shared_process":[],"2C953XXC8:shared_process":[],"2C5QRGX2Z:shared_process":[],"2C8HC545N:shared_process":[],"2C6SWKD5Q:shared_process":[],"2C6BM3HSJ:shared_process":[],"2C81JVBKQ:shared_process":[],"2C74HUE1N:shared_process":[],"2C6TPS6SD:shared_process":[],"2C9FDMPBZ:shared_process":[],"2C8N6KD49:shared_process":[],"2C8D1RM3G:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}